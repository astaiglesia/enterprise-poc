{"ast":null,"code":"var _jsxFileName = \"/home/computron/github/levelUp/redux-learning/src/features/LoginPage/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport styles from './LoginPage.module.css';\nimport zzLogo from '../../assets/images/android-chrome-192x192.png';\nimport LoginModal from './LoginModal/LoginModal';\nimport { toggleLoginModal } from './loginPageSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const isModalOpen = useSelector(state => {\n    return state.login.isModalOpen;\n  });\n  const dispatch = useDispatch();\n\n  const loginHandler = () => {\n    console.log('open login overlay');\n    dispatch(toggleLoginModal(!isModalOpen)); // removes focus after clicking ... should we maintain focus after opening modal?\n    // e.target.blur();\n  };\n\n  const ssoHandler = e => {\n    console.log('send to google'); // e.target.blur();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['login-page'],\n    children: [isModalOpen && /*#__PURE__*/_jsxDEV(LoginModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles['login-header'],\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enterprise Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['login-choices'],\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: loginHandler,\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: ssoHandler,\n          children: \"G\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.loginMain,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: zzLogo,\n        alt: \"zz brand logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles['login-footer'],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"design&development: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 12\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"sunset-sessions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"pUXLD5mwCV7XgQKK46J66Puw7R8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/computron/github/levelUp/redux-learning/src/features/LoginPage/LoginPage.jsx"],"names":["React","useState","useSelector","useDispatch","styles","zzLogo","LoginModal","toggleLoginModal","LoginPage","isModalOpen","state","login","dispatch","loginHandler","console","log","ssoHandler","e","loginMain"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,gDAAnB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;;AAIA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,WAAW,GAAGP,WAAW,CAACQ,KAAK,IAAI;AACvC,WAAOA,KAAK,CAACC,KAAN,CAAYF,WAAnB;AACD,GAF8B,CAA/B;AAIA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAH,IAAAA,QAAQ,CAACL,gBAAgB,CAAC,CAACE,WAAF,CAAjB,CAAR,CAFyB,CAIzB;AACA;AACD,GAND;;AASA,QAAMO,UAAU,GAAIC,CAAD,IAAO;AACxBH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADwB,CAExB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAAC,YAAD,CAAtB;AAAA,eAEIK,WAAD,iBAAiB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFpB,eAIE;AAAQ,MAAA,SAAS,EAAEL,MAAM,CAAC,cAAD,CAAzB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAEA,MAAM,CAAC,eAAD,CAAtB;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAES,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEG,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAcE;AAAM,MAAA,SAAS,EAAEZ,MAAM,CAACc,SAAxB;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEb,MAAV;AAAkB,QAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF,eAoBE;AAAQ,MAAA,SAAS,EAAED,MAAM,CAAC,cAAD,CAAzB;AAAA,6BACE;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,oBAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA/CD;;GAAMI,S;UACgBN,W,EAIHC,W;;;KALbK,S;AAiDN,eAAeA,SAAf","sourcesContent":["import React, { useState} from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './LoginPage.module.css';\nimport zzLogo from '../../assets/images/android-chrome-192x192.png'\n\nimport LoginModal from './LoginModal/LoginModal';\nimport { toggleLoginModal } from './loginPageSlice';\n\n\n\nconst LoginPage = () => {\n  const isModalOpen = useSelector(state => {\n    return state.login.isModalOpen;\n  });\n  \n  const dispatch = useDispatch();\n  \n  const loginHandler = () => {\n    console.log('open login overlay');\n    dispatch(toggleLoginModal(!isModalOpen));\n    \n    // removes focus after clicking ... should we maintain focus after opening modal?\n    // e.target.blur();\n  }\n\n\n  const ssoHandler = (e) => {\n    console.log('send to google');\n    // e.target.blur();\n  }\n  \n  return (\n    <div className={styles['login-page']} >\n      \n      {(isModalOpen) && <LoginModal />}\n      \n      <header className={styles['login-header']}>\n        <h3>\n          Enterprise Tracker\n        </h3>\n        <div className={styles['login-choices']}>\n          <button type=\"button\" onClick={loginHandler}>login</button>\n          <button type=\"button\" onClick={ssoHandler}>G</button>\n        </div>\n      </header>\n\n      <main className={styles.loginMain}>\n        <img src={zzLogo} alt=\"zz brand logo\"></img> \n   \n    \n      </main>\n      \n      <footer className={styles['login-footer']}>\n        <p><i>design&development: </i> <em>sunset-sessions</em></p>\n      </footer>\n    </div>\n  )\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}