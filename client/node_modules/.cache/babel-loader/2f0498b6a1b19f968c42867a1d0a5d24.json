{"ast":null,"code":"var _jsxFileName = \"/home/computron/github/levelUp/redux-learning/src/features/LoginPage/LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport styles from './LoginPage.module.css';\nimport zzLogo from '../../assets/images/android-chrome-192x192.png';\nimport LoginModal from './LoginModal/LoginModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const isModalOpen = useSelector(state => state.loginPage);\n  console.log(isModalOpen);\n\n  const loginHandler = e => {\n    console.log('open login overlay'); // login should open login modal\n\n    setIsModalOpen(currentState => !currentState); // removes focus after clicking ... should we maintain focus after opening modal?\n    // e.target.blur();\n  };\n\n  const ssoHandler = e => {\n    console.log('send to google'); // e.target.blur();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles['login-page'],\n    children: [isModalOpen && /*#__PURE__*/_jsxDEV(LoginModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: styles['login-header'],\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Enterprise Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['login-choices'],\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: loginHandler,\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: ssoHandler,\n          children: \"G\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.loginMain,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: zzLogo,\n        alt: \"zz brand logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: styles['login-footer'],\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"design&development: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"sunset-sessions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginPage, \"cwuTs3jp8es5KV0iALmW/IIyEGM=\", false, function () {\n  return [useSelector];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/home/computron/github/levelUp/redux-learning/src/features/LoginPage/LoginPage.jsx"],"names":["React","useState","useSelector","styles","zzLogo","LoginModal","LoginPage","isModalOpen","state","loginPage","console","log","loginHandler","e","setIsModalOpen","currentState","ssoHandler","loginMain"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,MAAP,MAAmB,gDAAnB;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;;;AAIA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAMC,WAAW,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,SAAhB,CAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BH,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAD0B,CAE1B;;AACAG,IAAAA,cAAc,CAACC,YAAY,IAAI,CAACA,YAAlB,CAAd,CAH0B,CAK1B;AACA;AACD,GAPD;;AASA,QAAMC,UAAU,GAAIH,CAAD,IAAO;AACxBH,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADwB,CAExB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAAC,YAAD,CAAtB;AAAA,eAEII,WAAD,iBAAiB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAFpB,eAIE;AAAQ,MAAA,SAAS,EAAEJ,MAAM,CAAC,cAAD,CAAzB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAEA,MAAM,CAAC,eAAD,CAAtB;AAAA,gCACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAES,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEI,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAcE;AAAM,MAAA,SAAS,EAAEb,MAAM,CAACc,SAAxB;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEb,MAAV;AAAkB,QAAA,GAAG,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF,eAoBE;AAAQ,MAAA,SAAS,EAAED,MAAM,CAAC,cAAD,CAAzB;AAAA,6BACE;AAAA,gCAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAH,oBAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA5CD;;GAAMG,S;UACgBJ,W;;;KADhBI,S;AA8CN,eAAeA,SAAf","sourcesContent":["import React, { useState} from 'react';\nimport { useSelector } from 'react-redux';\n\nimport styles from './LoginPage.module.css';\nimport zzLogo from '../../assets/images/android-chrome-192x192.png'\n\nimport LoginModal from './LoginModal/LoginModal';\n\n\n\nconst LoginPage = () => {\n  const isModalOpen = useSelector(state => state.loginPage);\n  console.log(isModalOpen);\n\n  const loginHandler = (e) => {\n    console.log('open login overlay');\n    // login should open login modal\n    setIsModalOpen(currentState => !currentState);\n    \n    // removes focus after clicking ... should we maintain focus after opening modal?\n    // e.target.blur();\n  }\n  \n  const ssoHandler = (e) => {\n    console.log('send to google');\n    // e.target.blur();\n  }\n  \n  return (\n    <div className={styles['login-page']} >\n      \n      {(isModalOpen) && <LoginModal />}\n      \n      <header className={styles['login-header']}>\n        <h3>\n          Enterprise Tracker\n        </h3>\n        <div className={styles['login-choices']}>\n          <button type=\"button\" onClick={loginHandler}>login</button>\n          <button type=\"button\" onClick={ssoHandler}>G</button>\n        </div>\n      </header>\n\n      <main className={styles.loginMain}>\n        <img src={zzLogo} alt=\"zz brand logo\"></img> \n   \n    \n      </main>\n      \n      <footer className={styles['login-footer']}>\n        <p><i>design&development: </i> <em>sunset-sessions</em></p>\n      </footer>\n    </div>\n  )\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}