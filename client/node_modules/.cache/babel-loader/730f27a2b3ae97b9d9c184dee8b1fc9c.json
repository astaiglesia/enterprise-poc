{"ast":null,"code":"var _jsxFileName = \"/home/aurasonicSkyfire/github/levelUp/zz-poc/client/src/components/NavMenu/NavMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport useToggle from '../../helpers/customHooks/useToggle';\nimport { Link } from \"react-router-dom\";\nimport styles from './NavMenu.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NavMenu = () => {\n  _s();\n\n  const [isToggled, setIsToggled] = useToggle(false); // ## need to handle key up, mouseover\n\n  const toggleMenu = () => {\n    // use callback when relying on previous state\n    setIsToggled(prevState => !prevState);\n  };\n\n  const toggleClass = isToggled ? \"styles.showMenu\" : \"\";\n  console.log(toggleClass);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: styles['nav-menu'],\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles['nav-button'],\n      onClick: toggleMenu // onMouseLeave={toggleMenu}\n      ,\n      children: isToggled ? \"Close\" : \"Menu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `${styles.navlist} ${isToggled ? styles.showNavList : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: styles.navlink,\n        to: \"/dashboard\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.navlink,\n        to: \"/projects\",\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.navlink,\n        to: \"/manage\",\n        children: \"Manage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.navlink,\n        to: \"/projects\",\n        children: \"settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.navlink,\n        to: \"/\",\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n\n_s(NavMenu, \"YwkK/3yIGUvisScYuy7PS6aH3gs=\", false, function () {\n  return [useToggle];\n});\n\n_c = NavMenu;\nexport default NavMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavMenu\");","map":{"version":3,"sources":["/home/aurasonicSkyfire/github/levelUp/zz-poc/client/src/components/NavMenu/NavMenu.jsx"],"names":["React","useState","useToggle","Link","styles","NavMenu","isToggled","setIsToggled","toggleMenu","prevState","toggleClass","console","log","navlist","showNavList","navlink"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AAEA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,SAAS,CAAC,KAAD,CAA3C,CAFoB,CAIpB;;AACA,QAAMM,UAAU,GAAG,MAAM;AACvB;AACAD,IAAAA,YAAY,CAACE,SAAS,IAAI,CAACA,SAAf,CAAZ;AACD,GAHD;;AAKA,QAAMC,WAAW,GAAGJ,SAAS,GAAG,iBAAH,GAAuB,EAApD;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAEN,MAAM,CAAC,UAAD,CAAtB;AAAA,4BACE;AACE,MAAA,SAAS,EAAEA,MAAM,CAAC,YAAD,CADnB;AAEE,MAAA,OAAO,EAAEI,UAFX,CAGE;AAHF;AAAA,gBAKGF,SAAS,GAAG,OAAH,GAAa;AALzB;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAI,MAAA,SAAS,EAAG,GAAEF,MAAM,CAACS,OAAQ,IAAGP,SAAS,GAAGF,MAAM,CAACU,WAAV,GAAwB,EAAG,EAAxE;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEV,MAAM,CAACW,OAAxB;AAAiC,QAAA,EAAE,EAAC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEX,MAAM,CAACW,OAAxB;AAAiC,QAAA,EAAE,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEX,MAAM,CAACW,OAAxB;AAAiC,QAAA,EAAE,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEX,MAAM,CAACW,OAAxB;AAAiC,QAAA,EAAE,EAAC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAEX,MAAM,CAACW,OAAxB;AAAiC,QAAA,EAAE,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBD,CAlCD;;GAAMV,O;UAE8BH,S;;;KAF9BG,O;AAoCN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport useToggle from '../../helpers/customHooks/useToggle';\n\nimport { Link } from \"react-router-dom\";\n\nimport styles from './NavMenu.module.css';\n\nconst NavMenu = () => {\n\n  const [isToggled, setIsToggled] = useToggle(false);\n\n  // ## need to handle key up, mouseover\n  const toggleMenu = () => {\n    // use callback when relying on previous state\n    setIsToggled(prevState => !prevState);\n  }\n\n  const toggleClass = isToggled ? \"styles.showMenu\" : \"\";\n  console.log(toggleClass)\n\n  return (\n      <nav className={styles['nav-menu']}>\n        <button \n          className={styles['nav-button']}\n          onClick={toggleMenu}\n          // onMouseLeave={toggleMenu}\n        >\n          {isToggled ? \"Close\" : \"Menu\"}\n        </button>\n\n        <ul className={`${styles.navlist} ${isToggled ? styles.showNavList : \"\"}`} >\n          <Link className={styles.navlink} to=\"/dashboard\" >Dashboard</Link>\n          <Link className={styles.navlink} to=\"/projects\" >Projects</Link>\n          <Link className={styles.navlink} to=\"/manage\" >Manage</Link>\n          <Link className={styles.navlink} to=\"/projects\">settings</Link>\n          <Link className={styles.navlink} to=\"/\">logout</Link>\n        </ul>\n\n      </nav>\n\n  )\n}\n\nexport default NavMenu;"]},"metadata":{},"sourceType":"module"}