{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\"; // create slice to handle the project form state\n// start simply with required fields only\n\nexport const projectFormSlice = createSlice({\n  name: 'projectForm',\n  initialState: {\n    // -- orderState property may be edited in future feature\n    orderState: 'Draft',\n    nickname: 'initial name',\n    location: '',\n    client: '',\n    company: '',\n    deliveryDate: '',\n    rentalTerm: '',\n    tag: ''\n  },\n  // -- under the hood: createSlice =>  \n  // creates actionTypes by mapping the slice name with reducer keys\n  // ---- e.g. {type: \"projectForm/changeNickname\"}\n  // creates reducer functions that responds to actions and updates state immutably \n  reducers: {\n    changeNickname: (state, action) => state.nickname = action.payload,\n    changeLocation: (state, action) => state.location = action.payload,\n    changeClient: (state, action) => state.client = action.payload\n  }\n});\nexport const {\n  changeNickname,\n  changeLocation,\n  changeClient\n} = projectFormSlice.actions;\nexport const selectNickname = state => state.projectForm.nickname;\nexport default projectFormSlice.reducer;","map":{"version":3,"sources":["/home/aurasonicSkyfire/github/levelUp/zz-poc/client/src/features/ProjectsContent/ProjectForm/projectFormSlice.js"],"names":["createSlice","projectFormSlice","name","initialState","orderState","nickname","location","client","company","deliveryDate","rentalTerm","tag","reducers","changeNickname","state","action","payload","changeLocation","changeClient","actions","selectNickname","projectForm","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B,C,CAGA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAGD,WAAW,CAAC;AAC1CE,EAAAA,IAAI,EAAE,aADoC;AAE1CC,EAAAA,YAAY,EAAE;AACZ;AACAC,IAAAA,UAAU,EAAE,OAFA;AAGZC,IAAAA,QAAQ,EAAE,cAHE;AAIZC,IAAAA,QAAQ,EAAE,EAJE;AAKZC,IAAAA,MAAM,EAAE,EALI;AAMZC,IAAAA,OAAO,EAAE,EANG;AAOZC,IAAAA,YAAY,EAAE,EAPF;AAQZC,IAAAA,UAAU,EAAE,EARA;AASZC,IAAAA,GAAG,EAAE;AATO,GAF4B;AAa1C;AACA;AACA;AACA;AACAC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACT,QAAN,GAAiBU,MAAM,CAACC,OADnD;AAERC,IAAAA,cAAc,EAAE,CAACH,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACR,QAAN,GAAiBS,MAAM,CAACC,OAFnD;AAGRE,IAAAA,YAAY,EAAE,CAACJ,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACP,MAAN,GAAeQ,MAAM,CAACC;AAH/C;AAjBgC,CAAD,CAApC;AAwBP,OAAO,MAAM;AAAEH,EAAAA,cAAF;AAAkBI,EAAAA,cAAlB;AAAkCC,EAAAA;AAAlC,IAAmDjB,gBAAgB,CAACkB,OAA1E;AAEP,OAAO,MAAMC,cAAc,GAAGN,KAAK,IAAIA,KAAK,CAACO,WAAN,CAAkBhB,QAAlD;AAGP,eAAeJ,gBAAgB,CAACqB,OAAhC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n\n// create slice to handle the project form state\n// start simply with required fields only\nexport const projectFormSlice = createSlice({\n  name: 'projectForm',\n  initialState: {\n    // -- orderState property may be edited in future feature\n    orderState: 'Draft',\n    nickname: 'initial name',\n    location: '',\n    client: '',\n    company: '',\n    deliveryDate: '',\n    rentalTerm: '',\n    tag: '',\n  },\n  // -- under the hood: createSlice =>  \n  // creates actionTypes by mapping the slice name with reducer keys\n  // ---- e.g. {type: \"projectForm/changeNickname\"}\n  // creates reducer functions that responds to actions and updates state immutably \n  reducers: {\n    changeNickname: (state, action) => state.nickname = action.payload,\n    changeLocation: (state, action) => state.location = action.payload,\n    changeClient: (state, action) => state.client = action.payload,\n  }\n})\n\nexport const { changeNickname, changeLocation, changeClient } = projectFormSlice.actions;\n\nexport const selectNickname = state => state.projectForm.nickname;\n\n\nexport default projectFormSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}