{"ast":null,"code":"var _jsxFileName = \"/home/computron/github/levelUp/redux-learning/src/features/ProjectForm/ProjectForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeNickname, changeLocation, changeClient, selectNickname } from './projectFormSlice';\nimport { createProject } from '../ProjectList/ProjectList/projectListSlice';\nimport styles from './ProjectForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectForm = () => {\n  _s();\n\n  // Use Hooks to Handle Local State for Form Data\n  const [formData, setFormData] = useState({\n    // -- orderState property may be edited in future feature\n    orderState: 'Draft',\n    nickname: '',\n    location: '',\n    client: '' // company: '',\n    // deliveryDate: '',\n    // rentalTerm: '',\n    // tag: '',\n\n  });\n\n  const nicknameHandler = e => {\n    setFormData(currentState => {\n      return { ...currentState,\n        nickname: e.target.value\n      };\n    });\n  };\n\n  const locationHandler = e => {\n    setFormData(currentState => {\n      return { ...currentState,\n        location: e.target.value\n      };\n    });\n  };\n\n  const clientHandler = e => {\n    setFormData(currentState => {\n      return { ...currentState,\n        client: e.target.value\n      };\n    });\n  }; // ---- Handle Form Submission To Update Redux Store \n  // ##... and Post to DB\n\n\n  const dispatch = useDispatch();\n\n  const formSubmissionHandler = e => {\n    e.preventDefault(); // dispatch form data to store\n\n    console.log(formData);\n    dispatch(createProject(formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Project Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nickname\",\n      children: \"Project Nickname* \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"nickname\",\n      id: \"nickname\",\n      value: formData.nickname,\n      required: true,\n      onChange: nicknameHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"location\",\n      children: \"Location / City* \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      id: \"location\",\n      value: formData.location,\n      required: true,\n      onChange: locationHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"client\",\n      children: \"Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"client\",\n      id: \"client\",\n      value: formData.client,\n      required: true,\n      onChange: clientHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create Draft Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectForm, \"5Iutdoda2sJJXxQODDR/lRq9hYc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProjectForm;\nexport default ProjectForm;\n{\n  /* <label htmlFor=\"proj-zip\" >Zip</label>\n  <input type=\"number\" name=\"proj-zip\" id=\"proj-zip\" ></input> */\n} // <label htmlFor=\"company\" >Company</label>\n// <input type=\"text\" name=\"company\" id=\"company\" ></input>\n// <label htmlFor=\"deliveryDate\" >Delivery Date</label>\n// <input type=\"date\" name=\"deliveryDate\" id=\"deliveryDate\" ></input>\n// <label htmlFor=\"rentalTerm\" >Rental Term</label>\n// <select type=\"text\" name=\"rentalTerm\" id=\"rentalTerm\" >\n//   <option value=\"1\">1 Month</option>\n//   <option value=\"3\">3 Months</option>\n//   <option value=\"6\">6 Months</option>\n//   <option value=\"12\" selected>12 Months</option>\n// </select>\n// <label htmlFor=\"tag\" >Tag</label>\n// <input type=\"text\" name=\"tag\" id=\"tag\" ></input>\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"sources":["/home/computron/github/levelUp/redux-learning/src/features/ProjectForm/ProjectForm.jsx"],"names":["React","useState","useSelector","useDispatch","changeNickname","changeLocation","changeClient","selectNickname","createProject","styles","ProjectForm","formData","setFormData","orderState","nickname","location","client","nicknameHandler","e","currentState","target","value","locationHandler","clientHandler","dispatch","formSubmissionHandler","preventDefault","console","log","form"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n  changeNickname, \n  changeLocation, \n  changeClient, \n  selectNickname,\n} from './projectFormSlice';\nimport { createProject } from '../ProjectList/ProjectList/projectListSlice';\n\nimport styles from './ProjectForm.module.css';\n\nconst ProjectForm = () => {\n  // Use Hooks to Handle Local State for Form Data\n  const [formData, setFormData] = useState({\n    // -- orderState property may be edited in future feature\n    orderState: 'Draft',\n    nickname: '',\n    location: '',\n    client: '',\n    // company: '',\n    // deliveryDate: '',\n    // rentalTerm: '',\n    // tag: '',\n  });\n\n  const nicknameHandler = (e) => {\n    setFormData(currentState => {\n      return {\n        ...currentState,\n        nickname: e.target.value,\n      }\n    })\n  };\n\n  const locationHandler = (e) => {\n    setFormData(currentState => {\n      return {\n        ...currentState,\n        location: e.target.value,\n      }\n    })\n  };\n\n  const clientHandler = (e) => {\n    setFormData(currentState => {\n      return {\n        ...currentState,\n        client: e.target.value,\n      }\n    })\n  };\n\n\n  // ---- Handle Form Submission To Update Redux Store \n  // ##... and Post to DB\n  const dispatch = useDispatch();\n  \n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    // dispatch form data to store\n    console.log(formData)\n    dispatch(createProject(formData));\n  }\n  \n\n  return (\n    <form className={styles.form} onSubmit={formSubmissionHandler}>\n      <h2>Project Profile</h2>\n      \n      <label htmlFor=\"nickname\" >Project Nickname* </label>\n      <input type=\"text\" \n              name=\"nickname\" \n              id=\"nickname\" \n              value={formData.nickname}\n              required={true} \n              onChange={nicknameHandler} >\n      </input>\n      \n      {/* refactor to pre-populate based on zip - JS30 */}\n      <label htmlFor=\"location\" >Location / City* </label>\n      <input type=\"text\" \n              name=\"location\" \n              id=\"location\" \n              value={formData.location}\n              required={true} \n              onChange={locationHandler} >\n      </input>\n      \n      <label htmlFor=\"client\" >Client</label>\n      <input type=\"text\" \n              name=\"client\" \n              id=\"client\" \n              value={formData.client}\n              required={true} \n              onChange={clientHandler} >\n      </input>\n      \n      <button type=\"submit\" >Create Draft Project</button>\n    </form>\n  )\n};\n\nexport default ProjectForm;\n\n\n\n\n\n\n\n\n\n\n{/* <label htmlFor=\"proj-zip\" >Zip</label>\n<input type=\"number\" name=\"proj-zip\" id=\"proj-zip\" ></input> */}\n      // <label htmlFor=\"company\" >Company</label>\n      // <input type=\"text\" name=\"company\" id=\"company\" ></input>\n      \n\n      // <label htmlFor=\"deliveryDate\" >Delivery Date</label>\n      // <input type=\"date\" name=\"deliveryDate\" id=\"deliveryDate\" ></input>\n\n      // <label htmlFor=\"rentalTerm\" >Rental Term</label>\n      // <select type=\"text\" name=\"rentalTerm\" id=\"rentalTerm\" >\n      //   <option value=\"1\">1 Month</option>\n      //   <option value=\"3\">3 Months</option>\n      //   <option value=\"6\">6 Months</option>\n      //   <option value=\"12\" selected>12 Months</option>\n      // </select>\n\n      // <label htmlFor=\"tag\" >Tag</label>\n      // <input type=\"text\" name=\"tag\" id=\"tag\" ></input>"]},"metadata":{},"sourceType":"module"}