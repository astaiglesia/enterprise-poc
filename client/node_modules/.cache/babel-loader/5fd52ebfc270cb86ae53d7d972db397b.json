{"ast":null,"code":"var _jsxFileName = \"/home/computron/github/levelUp/redux-learning/src/features/ProjectForm/ProjectForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeNickname, changeLocation, changeClient, selectNickname } from './projectFormSlice';\nimport { createProject } from '../ProjectList/ProjectList/projectListSlice';\nimport styles from './ProjectForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectForm = () => {\n  _s();\n\n  // Use Hooks to Handle Local State for Form Data\n  const [formData, setFormData] = useState({\n    // -- orderState property may be edited in future feature\n    orderState: 'Draft',\n    nickname: '',\n    location: '',\n    client: '',\n    company: '',\n    deliveryDate: '',\n    rentalTerm: '',\n    tag: ''\n  });\n\n  const nicknameHandler = e => {\n    setFormData(currentState => {\n      return { ...currentState,\n        nickname: e.target.value\n      };\n    });\n  };\n\n  const locationHandler = e => {\n    setFormData(currentState => {\n      return { ...currentState,\n        location: e.target.value\n      };\n    });\n  };\n\n  const clientHandler = e => {\n    setFormData(currentState => {\n      return { ...currentState,\n        client: e.target.value\n      };\n    });\n  };\n\n  const companyHandler = e => {\n    setFormData(currentState => {\n      return { ...currentState,\n        company: e.target.value\n      };\n    });\n  };\n\n  const deliveryDateHandler = e => {\n    setFormData(currentState => {\n      return { ...currentState,\n        deliveryDate: e.target.value\n      };\n    });\n  };\n\n  const rentalTermHandler = e => {\n    setFormData(currentState => {\n      return { ...currentState,\n        rentalTerm: e.target.value\n      };\n    });\n  };\n\n  const tagHandler = e => {\n    setFormData(currentState => {\n      return { ...currentState,\n        client: e.target.value\n      };\n    });\n  }; // ---- Handle Form Submission \n  // ### implent async reducer to Post to DB\n  // Dispatches Form State to Redux Store\n\n\n  const dispatch = useDispatch();\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    console.log(formData);\n    dispatch(createProject(formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: styles.form,\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Project Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"nickname\",\n      children: \"Project Nickname* \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"nickname\",\n      id: \"nickname\",\n      value: formData.nickname,\n      required: true,\n      onChange: nicknameHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"location\",\n      children: \"Location / City* \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"location\",\n      id: \"location\",\n      value: formData.location,\n      required: true,\n      onChange: locationHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"client\",\n      children: \"Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"client\",\n      id: \"client\",\n      required: true,\n      value: formData.client,\n      onChange: clientHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"company\",\n      children: \"Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"company\",\n      id: \"company\",\n      value: formData.company,\n      onChange: companyHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"deliveryDate\",\n      children: \"Delivery Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      name: \"deliveryDate\",\n      id: \"deliveryDate\",\n      value: formData.deliveryDate,\n      onChange: deliveryDateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"rentalTerm\",\n      children: \"Rental Term\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      type: \"text\",\n      name: \"rentalTerm\",\n      id: \"rentalTerm\",\n      value: formData.rentalTerm,\n      onChange: termHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"1\",\n        children: \"1 Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"3\",\n        children: \"3 Months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"6\",\n        children: \"6 Months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"12\",\n        selected: true,\n        children: \"12 Months\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"tag\",\n      children: \"Tag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"tag\",\n      id: \"tag\",\n      value: formData.tag,\n      onChange: tagHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      \"aria-label\": \"Submit form\",\n      children: \"Create Draft Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProjectForm, \"i2I+L/qaI06xKD+XStFngH2No+w=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ProjectForm;\nexport default ProjectForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectForm\");","map":{"version":3,"sources":["/home/computron/github/levelUp/redux-learning/src/features/ProjectForm/ProjectForm.jsx"],"names":["React","useState","useSelector","useDispatch","changeNickname","changeLocation","changeClient","selectNickname","createProject","styles","ProjectForm","formData","setFormData","orderState","nickname","location","client","company","deliveryDate","rentalTerm","tag","nicknameHandler","e","currentState","target","value","locationHandler","clientHandler","companyHandler","deliveryDateHandler","rentalTermHandler","tagHandler","dispatch","formSubmissionHandler","preventDefault","console","log","form","termHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { \n  changeNickname, \n  changeLocation, \n  changeClient, \n  selectNickname,\n} from './projectFormSlice';\nimport { createProject } from '../ProjectList/ProjectList/projectListSlice';\n\nimport styles from './ProjectForm.module.css';\n\nconst ProjectForm = () => {\n  // Use Hooks to Handle Local State for Form Data\n  const [formData, setFormData] = useState({\n    // -- orderState property may be edited in future feature\n    orderState: 'Draft',\n    nickname: '',\n    location: '',\n    client: '',\n    company: '',\n    deliveryDate: '',\n    rentalTerm: '',\n    tag: '',\n  });\n\n  const nicknameHandler = (e) => {\n    setFormData(currentState => {\n      return {\n        ...currentState,\n        nickname: e.target.value,\n      }\n    })\n  };\n\n  const locationHandler = (e) => {\n    setFormData(currentState => {\n      return {\n        ...currentState,\n        location: e.target.value,\n      }\n    })\n  };\n\n  const clientHandler = (e) => {\n    setFormData(currentState => {\n      return {\n        ...currentState,\n        client: e.target.value,\n      }\n    })\n  };\n\n  const companyHandler = (e) => {\n    setFormData(currentState => {\n      return {\n        ...currentState,\n        company: e.target.value,\n      }\n    })\n  };\n\n  const deliveryDateHandler = (e) => {\n    setFormData(currentState => {\n      return {\n        ...currentState,\n        deliveryDate: e.target.value,\n      }\n    })\n  };\n\n  const rentalTermHandler = (e) => {\n    setFormData(currentState => {\n      return {\n        ...currentState,\n        rentalTerm: e.target.value,\n      }\n    })\n  };\n\n  const tagHandler = (e) => {\n    setFormData(currentState => {\n      return {\n        ...currentState,\n        client: e.target.value,\n      }\n    })\n  };\n\n\n  // ---- Handle Form Submission \n  // ### implent async reducer to Post to DB\n  \n  // Dispatches Form State to Redux Store\n  const dispatch = useDispatch();\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    console.log(formData)\n    dispatch(createProject(formData));\n  }\n  \n\n  return (\n    <form className={styles.form} onSubmit={formSubmissionHandler}>\n      <h2>Project Profile</h2>\n      \n      <label htmlFor=\"nickname\" >Project Nickname* </label>\n      <input type=\"text\" \n              name=\"nickname\" \n              id=\"nickname\" \n              value={formData.nickname}\n              required={true} \n              onChange={nicknameHandler} >\n      </input>\n      \n      {/* refactor to pre-populate based on zip - JS30 */}\n      <label htmlFor=\"location\" >Location / City* </label>\n      <input type=\"text\" \n              name=\"location\" \n              id=\"location\" \n              value={formData.location}\n              required={true} \n              onChange={locationHandler} >\n      </input>\n      \n      <label htmlFor=\"client\" >Client</label>\n      <input type=\"text\" \n              name=\"client\" \n              id=\"client\" \n              required={true} \n              value={formData.client}\n              onChange={clientHandler} >\n      </input>\n\n      <label htmlFor=\"company\" >Company</label>\n      <input type=\"text\" \n              name=\"company\" \n              id=\"company\" \n              value={formData.company}\n              onChange={companyHandler} >\n      </input>\n\n      <label htmlFor=\"deliveryDate\" >Delivery Date</label>\n      <input type=\"date\" \n              name=\"deliveryDate\" \n              id=\"deliveryDate\" \n              value={formData.deliveryDate}\n              onChange={deliveryDateHandler}>\n      </input>\n\n      <label htmlFor=\"rentalTerm\" >Rental Term</label>\n      <select type=\"text\" \n              name=\"rentalTerm\"   \n              id=\"rentalTerm\" \n              value={formData.rentalTerm}\n              onChange={termHandler} >\n        <option value=\"1\">1 Month</option>\n        <option value=\"3\">3 Months</option>\n        <option value=\"6\">6 Months</option>\n        <option value=\"12\" selected>12 Months</option>\n      </select>\n\n      <label htmlFor=\"tag\" >Tag</label>\n      <input type=\"text\" \n              name=\"tag\" \n              id=\"tag\" \n              value={formData.tag}\n              onChange={tagHandler}>\n      </input>\n\n      <button type=\"submit\" aria-label=\"Submit form\" >Create Draft Project</button>\n    </form>\n  )\n};\n\nexport default ProjectForm;\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}