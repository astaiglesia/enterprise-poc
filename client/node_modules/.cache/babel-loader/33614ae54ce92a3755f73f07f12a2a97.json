{"ast":null,"code":"var _jsxFileName = \"/home/aurasonicSkyfire/github/levelUp/zz-poc/client/src/features/ProjectsContent/ProjectList/ProjectList/ProjectList.jsx\";\nimport React from 'react';\nimport styles from './ProjectList.module.css';\nimport SnippetCard from '../SnippetCard/SnippetCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectList = props => {\n  // assigns the proper query data property\n  const projectList = props.isFilterOn ? props.data.sortedState : props.data.projects;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.cardlist,\n    children: projectList.map(snippet => /*#__PURE__*/_jsxDEV(SnippetCard, {\n      snippetData: snippet\n    }, snippet.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProjectList;\nexport default ProjectList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"sources":["/home/aurasonicSkyfire/github/levelUp/zz-poc/client/src/features/ProjectsContent/ProjectList/ProjectList/ProjectList.jsx"],"names":["React","styles","SnippetCard","ProjectList","props","projectList","isFilterOn","data","sortedState","projects","cardlist","map","snippet","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B;AACA,QAAMC,WAAW,GAAID,KAAK,CAACE,UAAP,GAAqBF,KAAK,CAACG,IAAN,CAAWC,WAAhC,GAA8CJ,KAAK,CAACG,IAAN,CAAWE,QAA7E;AAEA,sBACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACS,QAAvB;AAAA,cACGL,WAAW,CAACM,GAAZ,CAAiBC,OAAO,iBACrB,QAAC,WAAD;AAA8B,MAAA,WAAW,EAAEA;AAA3C,OAAkBA,OAAO,CAACC,EAA1B;AAAA;AAAA;AAAA;AAAA,YADH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAXD;;KAAMV,W;AAaN,eAAeA,WAAf","sourcesContent":["import React from 'react';\n\nimport styles from './ProjectList.module.css';\n\nimport SnippetCard from '../SnippetCard/SnippetCard';\n\nconst ProjectList = props => {\n  // assigns the proper query data property\n  const projectList = (props.isFilterOn) ? props.data.sortedState : props.data.projects;\n\n  return (\n    <div className={styles.cardlist}>\n      {projectList.map( snippet => (\n          <SnippetCard key={snippet.id} snippetData={snippet}/>\n        ))}\n    </div>\n  )\n};\n\nexport default ProjectList;"]},"metadata":{},"sourceType":"module"}