{"ast":null,"code":"import React from'react';import{useSelector}from'react-redux';import{useDispatch}from'react-redux';import styles from'./LoginPage.module.css';import zzLogo from'../../assets/images/android-chrome-192x192.png';import LoginModal from'./LoginModal/LoginModal';import{toggleLoginModal}from'./loginPageSlice';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginPage=function LoginPage(){var isModalOpen=useSelector(function(state){return state.login.isModalOpen;});var dispatch=useDispatch();var loginHandler=function loginHandler(){console.log('open login overlay');dispatch(toggleLoginModal(!isModalOpen));// removes focus after clicking ... should we maintain focus after opening modal?\n// focus should transfer to input field\n// e.target.blur();\n};var ssoHandler=function ssoHandler(e){console.log('send to google');// e.target.blur();\n};return/*#__PURE__*/_jsxs(\"div\",{className:styles['login-page'],children:[isModalOpen&&/*#__PURE__*/_jsx(LoginModal,{}),/*#__PURE__*/_jsxs(\"header\",{className:styles['login-header'],children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Enterprise Tracker\"}),/*#__PURE__*/_jsxs(\"div\",{className:styles['login-choices'],children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:loginHandler,children:\"login\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:ssoHandler,children:\"G\"})]})]}),/*#__PURE__*/_jsx(\"main\",{className:styles.loginMain,children:/*#__PURE__*/_jsx(\"img\",{src:zzLogo,alt:\"zz brand logo\"})}),/*#__PURE__*/_jsx(\"footer\",{className:styles['login-footer'],children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"i\",{children:\"design&development: \"}),\" \",/*#__PURE__*/_jsx(\"em\",{children:\"sunset-sessions\"})]})})]});};export default LoginPage;","map":{"version":3,"sources":["/home/aurasonicSkyfire/github/levelUp/zz-poc/client/src/routes/LoginPage/LoginPage.jsx"],"names":["React","useSelector","useDispatch","styles","zzLogo","LoginModal","toggleLoginModal","LoginPage","isModalOpen","state","login","dispatch","loginHandler","console","log","ssoHandler","e","loginMain"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,MAAOC,CAAAA,MAAP,KAAmB,wBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,gDAAnB,CAEA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,OAASC,gBAAT,KAAiC,kBAAjC,C,wFAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAMC,CAAAA,WAAW,CAAGP,WAAW,CAAC,SAAAQ,KAAK,CAAI,CACvC,MAAOA,CAAAA,KAAK,CAACC,KAAN,CAAYF,WAAnB,CACD,CAF8B,CAA/B,CAIA,GAAMG,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAEA,GAAMU,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACAH,QAAQ,CAACL,gBAAgB,CAAC,CAACE,WAAF,CAAjB,CAAR,CAEA;AACA;AACA;AACD,CAPD,CASA,GAAMO,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,CAAD,CAAO,CACxBH,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACA;AACD,CAHD,CAKA,mBACE,aAAK,SAAS,CAAEX,MAAM,CAAC,YAAD,CAAtB,WAEIK,WAAD,eAAiB,KAAC,UAAD,IAFpB,cAIE,gBAAQ,SAAS,CAAEL,MAAM,CAAC,cAAD,CAAzB,wBACE,0CADF,cAIE,aAAK,SAAS,CAAEA,MAAM,CAAC,eAAD,CAAtB,wBACE,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAES,YAA/B,mBADF,cAEE,eAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEG,UAA/B,eAFF,GAJF,GAJF,cAcE,aAAM,SAAS,CAAEZ,MAAM,CAACc,SAAxB,uBACE,YAAK,GAAG,CAAEb,MAAV,CAAkB,GAAG,CAAC,eAAtB,EADF,EAdF,cAkBE,eAAQ,SAAS,CAAED,MAAM,CAAC,cAAD,CAAzB,uBACE,kCAAG,2CAAH,kBAA+B,uCAA/B,GADF,EAlBF,GADF,CAwBD,CA7CD,CA+CA,cAAeI,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './LoginPage.module.css';\nimport zzLogo from '../../assets/images/android-chrome-192x192.png'\n\nimport LoginModal from './LoginModal/LoginModal';\nimport { toggleLoginModal } from './loginPageSlice';\n\nconst LoginPage = () => {\n  const isModalOpen = useSelector(state => {\n    return state.login.isModalOpen;\n  });\n  \n  const dispatch = useDispatch();\n  \n  const loginHandler = () => {\n    console.log('open login overlay');\n    dispatch(toggleLoginModal(!isModalOpen));\n    \n    // removes focus after clicking ... should we maintain focus after opening modal?\n    // focus should transfer to input field\n    // e.target.blur();\n  }\n\n  const ssoHandler = (e) => {\n    console.log('send to google');\n    // e.target.blur();\n  }\n  \n  return (\n    <div className={styles['login-page']} >\n      \n      {(isModalOpen) && <LoginModal />}\n      \n      <header className={styles['login-header']}>\n        <h3>\n          Enterprise Tracker\n        </h3>\n        <div className={styles['login-choices']}>\n          <button type=\"button\" onClick={loginHandler}>login</button>\n          <button type=\"button\" onClick={ssoHandler}>G</button>\n        </div>\n      </header>\n\n      <main className={styles.loginMain}>\n        <img src={zzLogo} alt=\"zz brand logo\"></img> \n      </main>\n      \n      <footer className={styles['login-footer']}>\n        <p><i>design&development: </i> <em>sunset-sessions</em></p>\n      </footer>\n    </div>\n  )\n}\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}