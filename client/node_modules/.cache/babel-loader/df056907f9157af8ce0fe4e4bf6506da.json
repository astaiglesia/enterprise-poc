{"ast":null,"code":"var _jsxFileName = \"/home/aurasonicSkyfire/github/levelUp/zz-poc/client/src/features/ProjectsContent/ProjectListContainer/ProjectListContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport { useSelector } from 'react-redux';\nimport styles from './ProjectListContainer.module.css';\nimport { GET_SNIPPETS, GET_DRAFTS, GET_RESERVEDS, GET_DEPOSITS, GET_APPROVEDS, GET_SUBSCRIBEDS } from '../../../helpers/Queries';\nimport ProjectList from './ProjectList/ProjectList';\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CardListContainer = props => {\n  _s();\n\n  // ===== Handles Initial Rendering of Project List\n  const [filter, setFilter] = useState(GET_SNIPPETS);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(filter); // ===== Handles Mutation Logic to Add New Projects  \n  // defines mutation query \n\n  const ADD_PROJECT = gql`\n  mutation AddProject ($newProject:NewProjectInput!){\n    addProject (input: $newProject) {\n      _id\n      orderState\n      nickname\n      location\n      client\n      company\n      deliveryDate\n      rentalTerm\n      tag\n    }\n  }\n  `;\n  const [addProject, {\n    loading: newLoad,\n    error: newError,\n    data: newData\n  }] = useMutation(ADD_PROJECT); // retrieves new project form data from Redux store\n\n  const newProjectData = useSelector(state => state.projectForm.newProjectData);\n  useEffect(() => {\n    addProject({\n      variables: {\n        newProject: { ...newProjectData\n        }\n      }\n    });\n  }, [addProject, newProjectData]); // ## =+=+=+= BUGS =+=+\n  // list needs to be updated\n  // form needs to be reset\n  // date is not passing through (formatting?)\n  // useEffect(() => {\n  //   console.log(newData)\n  // }, [newData])\n  // // triggers a re-render of Project List onFulfillment of useMutation\n  // useEffect(() => {\n  //   console.log('setFilter Triggered')\n  //   console.log(newProject.error)\n  // }, [newProject.error])\n  // toggle details bar\n\n  const [isDetailsbarOpen, setIsDetailsbarOpen] = useState(false);\n\n  const toggleSidebar = () => {\n    setIsDetailsbarOpen(!isDetailsbarOpen);\n  }; // ## codesplit header and filter logic\n\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles['list-container'],\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['list-header'],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.quicklinks,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: toggleSidebar,\n          className: styles['quick-sort'],\n          children: \" + \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setFilter(GET_DRAFTS),\n          className: styles['quick-sort'],\n          children: \" drafts \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setFilter(GET_RESERVEDS),\n          className: styles['quick-sort'],\n          children: \" reserved \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setFilter(GET_DEPOSITS),\n          className: styles['quick-sort'],\n          children: \" onDeposit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setFilter(GET_APPROVEDS),\n          className: styles['quick-sort'],\n          children: \" approved \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setFilter(GET_SUBSCRIBEDS),\n          className: styles['quick-sort'],\n          children: \" subscribed \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setFilter(GET_SNIPPETS),\n          className: styles['quick-sort'],\n          children: \" all orders \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.search,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"site-search\",\n          children: \"filter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          id: \"site-search\",\n          className: styles['site-search'],\n          name: \"site-search\",\n          \"aria-label\": \"Search through site content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles['quick-sort'],\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isDetailsbarOpen && /*#__PURE__*/_jsxDEV(ProjectForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Loading... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 23\n      }, this) : error ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" `Error! $\", error.message, \"` \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 23\n      }, this) : data.projects.length > 0 ? /*#__PURE__*/_jsxDEV(ProjectList, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No Project Data Stored\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardListContainer, \"5PFQV7KokWJDFsOt7duGOJ3UgUw=\", false, function () {\n  return [useQuery, useMutation, useSelector];\n});\n\n_c = CardListContainer;\nexport default CardListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardListContainer\");","map":{"version":3,"sources":["/home/aurasonicSkyfire/github/levelUp/zz-poc/client/src/features/ProjectsContent/ProjectListContainer/ProjectListContainer.jsx"],"names":["React","useState","useEffect","gql","useQuery","useMutation","useSelector","styles","GET_SNIPPETS","GET_DRAFTS","GET_RESERVEDS","GET_DEPOSITS","GET_APPROVEDS","GET_SUBSCRIBEDS","ProjectList","ProjectForm","CardListContainer","props","filter","setFilter","loading","error","data","ADD_PROJECT","addProject","newLoad","newError","newData","newProjectData","state","projectForm","variables","newProject","isDetailsbarOpen","setIsDetailsbarOpen","toggleSidebar","quicklinks","search","message","projects","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport { useSelector } from 'react-redux';\n\nimport styles from './ProjectListContainer.module.css';\nimport { GET_SNIPPETS, GET_DRAFTS, GET_RESERVEDS, GET_DEPOSITS, GET_APPROVEDS, GET_SUBSCRIBEDS } from '../../../helpers/Queries';\n\nimport ProjectList from './ProjectList/ProjectList';\nimport ProjectForm from \"../ProjectForm/ProjectForm\";\n\n\nconst CardListContainer = props => {\n  // ===== Handles Initial Rendering of Project List\n  const [ filter, setFilter ] = useState(GET_SNIPPETS);\n  const { loading, error, data } = useQuery(filter);\n\n  // ===== Handles Mutation Logic to Add New Projects  \n  // defines mutation query \n  const ADD_PROJECT = gql`\n  mutation AddProject ($newProject:NewProjectInput!){\n    addProject (input: $newProject) {\n      _id\n      orderState\n      nickname\n      location\n      client\n      company\n      deliveryDate\n      rentalTerm\n      tag\n    }\n  }\n  `;\n  \n  const [ addProject, {loading: newLoad, error: newError, data: newData} ] = useMutation(ADD_PROJECT); \n  \n  // retrieves new project form data from Redux store\n  const newProjectData = useSelector(state => state.projectForm.newProjectData);\n\n  useEffect(() => {\n    addProject({\n      variables: {newProject: {...newProjectData}}\n    });\n    \n  }, [addProject, newProjectData]);\n  \n  \n  // ## =+=+=+= BUGS =+=+\n  // list needs to be updated\n  // form needs to be reset\n  // date is not passing through (formatting?)\n  // useEffect(() => {\n    \n  //   console.log(newData)\n  // }, [newData])\n  \n  // // triggers a re-render of Project List onFulfillment of useMutation\n  // useEffect(() => {\n  //   console.log('setFilter Triggered')\n  //   console.log(newProject.error)\n  // }, [newProject.error])\n   \n  // toggle details bar\n  const [isDetailsbarOpen, setIsDetailsbarOpen ] = useState(false);\n\n  const toggleSidebar = () => {\n    setIsDetailsbarOpen(!isDetailsbarOpen)\n  }\n\n  // ## codesplit header and filter logic\n  return (\n    <section className={styles['list-container']}>\n      <div className={styles['list-header']}> \n        <div className={styles.quicklinks}>\n          <button type=\"button\" onClick={toggleSidebar} className={styles['quick-sort']}> + </button>\n          <button type=\"button\" onClick={() => setFilter(GET_DRAFTS)} className={styles['quick-sort']}> drafts </button>\n          <button type=\"button\" onClick={() => setFilter(GET_RESERVEDS)} className={styles['quick-sort']}> reserved </button>\n          <button type=\"button\" onClick={() => setFilter(GET_DEPOSITS)} className={styles['quick-sort']}> onDeposit </button>\n          <button type=\"button\" onClick={() => setFilter(GET_APPROVEDS)} className={styles['quick-sort']}> approved </button>\n          <button type=\"button\" onClick={() => setFilter(GET_SUBSCRIBEDS)} className={styles['quick-sort']}> subscribed </button>\n          <button type=\"button\" onClick={() => setFilter(GET_SNIPPETS)} className={styles['quick-sort']}> all orders </button>\n        </div>\n      \n        <div className={styles.search}>\n          <label htmlFor=\"site-search\">filter</label>\n            <input type=\"search\" id=\"site-search\" className={styles['site-search']} name=\"site-search\" aria-label=\"Search through site content\"/>\n          <button type=\"submit\" className={styles['quick-sort']}>Search</button>\n        </div>\n      </div>\n\n      {(isDetailsbarOpen) && <ProjectForm />}\n\n      {/* pull logic out of the return statement andrefactor to switch statement? */}\n      <React.Fragment>\n        { (loading) ? <h3> Loading... </h3>\n          : (error) ? <h3> `Error! ${error.message}` </h3>   \n          : (data.projects.length > 0) ? <ProjectList data={data} /> \n          : <h3>No Project Data Stored</h3> }\n      </React.Fragment>\n    </section>\n  )\n};\n\nexport default CardListContainer;"]},"metadata":{},"sourceType":"module"}