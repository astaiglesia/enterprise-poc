{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/aurasonicSkyfire/github/levelUp/zz-poc/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _slicedToArray from\"/home/aurasonicSkyfire/github/levelUp/zz-poc/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject;import React,{useState,useEffect}from'react';import{gql,useQuery,useMutation}from'@apollo/client';import{useSelector}from'react-redux';import styles from'./ProjectListContainer.module.css';import{GET_SNIPPETS,GET_DRAFTS,GET_RESERVEDS,GET_DEPOSITS,GET_APPROVEDS,GET_SUBSCRIBEDS}from'../../../helpers/Queries';import ProjectList from'./ProjectList/ProjectList';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CardListContainer=function CardListContainer(props){// --- Handles Initial Rendering of Project List\nvar _useState=useState(GET_SNIPPETS),_useState2=_slicedToArray(_useState,2),filter=_useState2[0],setFilter=_useState2[1];var _useQuery=useQuery(filter),loading=_useQuery.loading,error=_useQuery.error,data=_useQuery.data;// --- Handles Mutation Logic to Add New Projects\n// defines mutation query \nvar NEW_PROJECT=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  mutation CreateProject ($newProject:NewProjectInput!){\\n    addProject (input: $newProject) {\\n      id\\n      orderState\\n      nickname\\n      location\\n      client\\n      company\\n      deliveryDate\\n      rentalTerm\\n      tag\\n    }\\n  }\\n  \"])));// const [ createProject, newProject ] = useMutation(NEW_PROJECT); \n// retrieves new project form data from Redux store\n// const newProjectData = useSelector(state => {\n//   console.log(state.projectForm.newProjectData)\n//   return state.projectForm.newProjectData;\n// });\n// useEffect(() => {\n//   createProject({\n//     variables: {newProject: {...newProjectData}}\n//   })\n// }, [createProject, newProjectData])\n// // triggers a re-render of Project List onFulfillment of useMutation\n// useEffect(() => {\n//   console.log('setFilter Triggered')\n//   setFilter(GET_SNIPPETS)\n//   console.log(newProject.error)\n// }, [newProject.error])\n// ## codesplit header and filter logic\nreturn/*#__PURE__*/_jsxs(\"section\",{className:styles['list-container'],children:[/*#__PURE__*/_jsxs(\"div\",{className:styles['list-header'],children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.toggleSidebar,className:styles['create-button'],children:\" + \"}),/*#__PURE__*/_jsxs(\"div\",{className:styles.search,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"orderSearch\",children:\"project filter\"}),/*#__PURE__*/_jsx(\"input\",{type:\"search\",id:\"site-search\",name:\"q\",\"aria-label\":\"Search through site content\"}),/*#__PURE__*/_jsx(\"button\",{children:\"Search\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:styles.quicklinks,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return setFilter(GET_DRAFTS);},className:styles['quick-sort'],children:\" drafts \"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return setFilter(GET_RESERVEDS);},className:styles['quick-sort'],children:\" reserved \"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return setFilter(GET_DEPOSITS);},className:styles['quick-sort'],children:\" onDeposit \"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return setFilter(GET_APPROVEDS);},className:styles['quick-sort'],children:\" approved \"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return setFilter(GET_SUBSCRIBEDS);},className:styles['quick-sort'],children:\" subscribed \"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return setFilter(GET_SNIPPETS);},className:styles['quick-sort'],children:\" all orders \"})]})]}),/*#__PURE__*/_jsx(React.Fragment,{children:loading?/*#__PURE__*/_jsx(\"h3\",{children:\" Loading... \"}):error?/*#__PURE__*/_jsxs(\"h3\",{children:[\" `Error! $\",error,\"` \"]}):/*#__PURE__*/_jsx(ProjectList,{data:data})})]});};export default CardListContainer;","map":{"version":3,"sources":["/home/aurasonicSkyfire/github/levelUp/zz-poc/client/src/features/ProjectsContent/ProjectListContainer/ProjectListContainer.jsx"],"names":["React","useState","useEffect","gql","useQuery","useMutation","useSelector","styles","GET_SNIPPETS","GET_DRAFTS","GET_RESERVEDS","GET_DEPOSITS","GET_APPROVEDS","GET_SUBSCRIBEDS","ProjectList","CardListContainer","props","filter","setFilter","loading","error","data","NEW_PROJECT","toggleSidebar","search","quicklinks"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { gql, useQuery, useMutation } from '@apollo/client';\nimport { useSelector } from 'react-redux';\n\nimport styles from './ProjectListContainer.module.css';\nimport { GET_SNIPPETS, GET_DRAFTS, GET_RESERVEDS, GET_DEPOSITS, GET_APPROVEDS, GET_SUBSCRIBEDS } from '../../../helpers/Queries';\n\nimport ProjectList from './ProjectList/ProjectList';\n\n\nconst CardListContainer = props => {\n  // --- Handles Initial Rendering of Project List\n  const [ filter, setFilter ] = useState(GET_SNIPPETS);\n  const { loading, error, data } = useQuery(filter);\n  \n  // --- Handles Mutation Logic to Add New Projects\n  \n  // defines mutation query \n  const NEW_PROJECT = gql`\n  mutation CreateProject ($newProject:NewProjectInput!){\n    addProject (input: $newProject) {\n      id\n      orderState\n      nickname\n      location\n      client\n      company\n      deliveryDate\n      rentalTerm\n      tag\n    }\n  }\n  `;\n  \n  // const [ createProject, newProject ] = useMutation(NEW_PROJECT); \n  \n  // retrieves new project form data from Redux store\n  // const newProjectData = useSelector(state => {\n  //   console.log(state.projectForm.newProjectData)\n  //   return state.projectForm.newProjectData;\n  // });\n\n  // useEffect(() => {\n  //   createProject({\n  //     variables: {newProject: {...newProjectData}}\n  //   })\n  // }, [createProject, newProjectData])\n  \n  // // triggers a re-render of Project List onFulfillment of useMutation\n  // useEffect(() => {\n  //   console.log('setFilter Triggered')\n  //   setFilter(GET_SNIPPETS)\n  //   console.log(newProject.error)\n  // }, [newProject.error])\n    \n    \n  // ## codesplit header and filter logic\n  return (\n    <section className={styles['list-container']}>\n      <div className={styles['list-header']}> \n        <button type=\"button\" onClick={props.toggleSidebar} className={styles['create-button']}> + </button>\n\n        <div className={styles.search}>\n          <label htmlFor=\"orderSearch\">project filter</label>\n            <input type=\"search\" id=\"site-search\" name=\"q\" aria-label=\"Search through site content\"/>\n          <button>Search</button>\n        </div>\n\n        <div className={styles.quicklinks}>\n          <button type=\"button\" onClick={() => setFilter(GET_DRAFTS)} className={styles['quick-sort']}> drafts </button>\n          <button type=\"button\" onClick={() => setFilter(GET_RESERVEDS)} className={styles['quick-sort']}> reserved </button>\n          <button type=\"button\" onClick={() => setFilter(GET_DEPOSITS)} className={styles['quick-sort']}> onDeposit </button>\n          <button type=\"button\" onClick={() => setFilter(GET_APPROVEDS)} className={styles['quick-sort']}> approved </button>\n          <button type=\"button\" onClick={() => setFilter(GET_SUBSCRIBEDS)} className={styles['quick-sort']}> subscribed </button>\n          <button type=\"button\" onClick={() => setFilter(GET_SNIPPETS)} className={styles['quick-sort']}> all orders </button>\n        </div>\n      </div>\n\n      <React.Fragment>\n        { (loading) ? <h3> Loading... </h3>\n          : (error) ? <h3> `Error! ${error}` </h3>   \n          : <ProjectList data={data} />}\n      </React.Fragment>\n    </section>\n  )\n};\n\nexport default CardListContainer;"]},"metadata":{},"sourceType":"module"}